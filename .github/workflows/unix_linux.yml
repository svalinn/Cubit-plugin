name: Linux builds

on:
  # allows us to run workflows manually
  workflow_dispatch:
  pull_request:
    branches:
      - develop
    paths-ignore:
      - '.github/workflows/windows.yml'
      - '.github/workflows/unix_mac.yml'
      - '*.md'
      - 'LICENSE'

  push:
    branches:
      - develop
    paths-ignore:
      - '.github/workflows/windows.yml'
      - '.github/workflows/unix_mac.yml'
      - '*.md'
      - 'LICENSE'

  release:
    types: # This configuration does not affect the page_build event above
      - published
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  building-plugin:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cubit: [2023.6-dev]
        os: [ubuntu]
        os_version: [22.04]

    name: 'Cubit ${{ matrix.cubit }} Build for ${{ matrix.os }} ${{ matrix.os_version }} of Svalinn Plugin'

    container:
      image:  ${{ matrix.os }}:${{ matrix.os_version }}

    steps:
      - name: install new git
        shell: bash -l {0}
        run: |
          apt-get update
          apt-get install -y software-properties-common curl
          if [ "${{ matrix.os }}" == "ubuntu" ]; then
            add-apt-repository ppa:git-core/ppa
            apt-get update
          fi
          apt-get install -y git
      - uses: actions/checkout@v2

      - name: Environment Variables
        shell: bash -l {0}
        run: |
          COREFORM_BASE_URL=https://f002.backblazeb2.com/file/cubit-downloads/Coreform-Cubit/Releases
          SUFFIX=Lin64

          if [ "${{ matrix.cubit }}" == "17.1.0" ]; then
            BASE=Trelis-17.1.0
            BASESDK=Trelis-SDK-17.1.0
            CUBIT_BASE_NAME=Trelis-17.1
            HDF5_PATH=/usr/lib/x86_64-linux-gnu/hdf5/serial
          elif [ "${{ matrix.cubit }}" == "2021.4" ]; then
            BASE=Coreform-Cubit-2021.4%2B15017_05893177
            CUBIT_BASE_NAME=Coreform-Cubit-2021.4
            HDF5_PATH=/usr/local/HDF_Group/HDF5/1.12.0
          elif [ "${{ matrix.cubit }}" == "2021.5" ]; then
            BASE=Coreform-Cubit-2021.5%2B15962_5043ef39
            CUBIT_BASE_NAME=Coreform-Cubit-2021.5
            HDF5_PATH=/usr/local/HDF_Group/HDF5/1.12.0
          elif [ "${{ matrix.cubit }}" == "2021.11" ]; then
            BASE=Coreform-Cubit-2021.11%2B21637_35609873
            CUBIT_BASE_NAME=Coreform-Cubit-2021.11
            HDF5_PATH=/usr/local/HDF_Group/HDF5/1.12.0
          elif [ "${{ matrix.cubit }}" == "2022.4" ]; then
            BASE=Coreform-Cubit-2022.4%2B26186_e1209cf7
            CUBIT_BASE_NAME=Coreform-Cubit-2022.4
            HDF5_PATH=/usr/local/HDF_Group/HDF5/1.12.0
          elif [ "${{ matrix.cubit }}" == "2023.6-dev" ]; then
            COREFORM_BASE_URL=https://f002.backblazeb2.com/file/cubit-downloads/Coreform-Cubit/master
            BASE=Coreform-Cubit-2023.6-rc%2B38128
            CUBIT_BASE_NAME=Coreform-Cubit-2023.6
            HDF5_PATH=/usr/local/HDF_Group/HDF5/1.12.0
          fi

          EXT=deb
          echo "SED=sed" >> $GITHUB_ENV
          echo "BUILD_SHARED_LIBS=ON" >> $GITHUB_ENV
          echo "BUILD_STATIC_LIBS=OFF" >> $GITHUB_ENV
          echo "system=linux" >> $GITHUB_ENV
          echo "CUBIT_PATH=/opt/${CUBIT_BASE_NAME}" >> $GITHUB_ENV
          echo "COREFORM_BASE_URL=${COREFORM_BASE_URL}/Linux/" >> $GITHUB_ENV
          echo "HDF5_PATH=${HDF5_PATH}" >> $GITHUB_ENV

          echo "OS=${{ matrix.os }}" >> $GITHUB_ENV
          echo "OS_VERSION=${{ matrix.os_version }}" >> $GITHUB_ENV
          echo "CMAKE_ADDITIONAL_FLAGS=-DCMAKE_CXX_FLAGS=-D_GLIBCXX_USE_CXX11_ABI=0" >> $GITHUB_ENV

          echo "CUBIT_PKG=${BASE}-${SUFFIX}.${EXT}" >> $GITHUB_ENV
          echo "CUBIT_SDK_PKG=${BASESDK}-${SUFFIX}.tar.gz" >> $GITHUB_ENV
          echo "CUBIT_BASE_NAME=${CUBIT_BASE_NAME}" >> $GITHUB_ENV

          echo "CURRENT=$(pwd)" >> $GITHUB_ENV
          echo "SCRIPTPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "PLUGIN_ABS_PATH=$GITHUB_WORKSPACE/.." >> $GITHUB_ENV
          echo "FOLDER_PKG=$GITHUB_WORKSPACE/pkg" >> $GITHUB_ENV

          echo "" >> ${HOME}/.bash_profile
          echo "source $GITHUB_WORKSPACE/scripts/unix_share_build.sh" >> $HOME/.bash_profile

      - name: Initial setup
        shell: bash -l {0}
        run: |
          ${system}_install_prerequisites

      - name: Downloading packages
        shell: bash -l {0}
        run: |
          mkdir -p $FOLDER_PKG
          cd ${FOLDER_PKG}
          curl -L ${COREFORM_BASE_URL}${CUBIT_PKG} --output ${CUBIT_PKG}
          if [ "${{ matrix.cubit }}" = "17.1.0" ]; then
            curl -L ${COREFORM_BASE_URL}${CUBIT_SDK_PKG} --output ${CUBIT_SDK_PKG}
          fi
          mkdir ${SCRIPTPATH}/release

      - name: Cubit setup
        shell: bash -l {0}
        run: |
          ${system}_setup_cubit ${{ matrix.cubit }}

      - name: Build HDF5
        shell: bash -l {0}
        run: |
          ${system}_build_hdf5

      - name: Build MOAB
        shell: bash -l {0}
        run: |
          build_moab

      - name: Build DAGMC
        shell: bash -l {0}
        run: |
          build_dagmc

      - name: Build plugin
        shell: bash -l {0}
        run: |
          build_plugin

      - name: Prepare package
        shell: bash -l {0}
        run: |
          ${system}_build_plugin_pkg ${{ matrix.cubit }}

      - if: github.event_name != 'release'
        name: Upload artifact for CI
        uses: actions/upload-artifact@v2
        with:
          name: svalinn-plugin_${{ matrix.os }}-${{ matrix.os_version }}_cubit_${{ matrix.cubit }}.tgz
          path: ${{ github.workspace }}/release/svalinn-plugin_${{ matrix.os }}-${{ matrix.os_version }}_cubit_${{ matrix.cubit }}.tgz
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`

      - if: github.event_name == 'release'
        name: Upload binaries into the release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/release/svalinn-plugin_${{ matrix.os }}-${{ matrix.os_version }}_cubit_${{ matrix.cubit }}.tgz
          asset_name: svalinn-plugin_${{ matrix.os }}-${{ matrix.os_version }}_cubit_${{ matrix.cubit }}.tgz
          tag: ${{ github.ref }}
          overwrite: true
